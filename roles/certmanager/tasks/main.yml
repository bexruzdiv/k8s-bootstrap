---
- name: Retrieve kubeconfig from Vault and write to a user-writable location
  block:
    - name: Retrieve kubeconfig from Vault
      shell: vault kv get -field=value {{ kubeconfig_vault_path }}
      environment:
        VAULT_ADDR: "{{ vault_address }}"
        VAULT_TOKEN: "{{ vault_token }}"
      register: __kubeconfig_json

- name: Convert JSON to YAML and save to a variable
  set_fact:
    _kubeconfig_content: "{{ __kubeconfig_json.stdout | from_json | to_nice_yaml }}"

- name: Ensure .kube directory exists
  file:
    path: "/root/.kube"
    state: directory
    mode: '0755'

- name: Save kubeconfig to /root/.kube/config
  copy:
    content: "{{ _kubeconfig_content }}"
    dest: "/root/.kube/config"
    mode: '0600'

- name: Add Jetstack Helm Repository
  ansible.builtin.shell:
    cmd: helm --kubeconfig={{ kubeconfig }} repo add jetstack https://charts.jetstack.io

- name: Update Helm Repositories
  ansible.builtin.shell:
    cmd: helm --kubeconfig={{ kubeconfig }} repo update

- name: Run Helm Show Values Command
  ansible.builtin.shell:
    cmd: helm --kubeconfig={{ kubeconfig }} show values jetstack/cert-manager --version {{ prxmkuberbootstrap_certmanager_version }} > /root/values.yml 
  args:
    executable: /bin/bash

- name: Open values.yml and modify installCRDs and prometheus settings
  ansible.builtin.replace:
    path: /root/values.yml
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop:
    - { regexp: 'installCRDs: false', replace: 'installCRDs: true' }
    - { regexp: '^prometheus:\n *enabled: true', replace: 'prometheus:\n  enabled: false' }


- name: Run Helm Upgrade Command
  ansible.builtin.shell:
    cmd: >
      helm --kubeconfig={{ kubeconfig }} upgrade  cert-manager jetstack/cert-manager 
      --install 
      --create-namespace 
      --namespace cert-manager 
      --version {{ prxmkuberbootstrap_certmanager_version }} --values /root/values.yml 
  args:
    executable: /bin/bash

- name: Delete a specific file
  ansible.builtin.file:
    path: /root/values.yml
    state: absent 

- name: Create Issuer YAML File
  template:
    src: issuer.yml.j2
    dest: /root/issuer.yml


- name: Apply Issuer Configuration
  ansible.builtin.command:
    cmd: kubectl apply -f /root/issuer.yml -n cert-managerer
  args:
    executable: /bin/bash

- name: Delete a specific file
  ansible.builtin.file:
    path: /root/issuer.yml
    state: absent 
